%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    50,
    true,
    [],
    0,
    51,
    6,
    1,
    false,
    5,
    2,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    19,
    18,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,5,2},
      {yaml_doc_end,5,2},
      {yaml_collection_end,5,1,flow,mapping},
      {yaml_scalar,4,8,
        {yaml_tag,4,8,{non_specific,"?"}},
        flow,plain,[]},
      {yaml_mapping_value,4,8},
      {yaml_scalar,4,1,
        {yaml_tag,4,1,{non_specific,"!"}},
        flow,double_quoted,"empty"},
      {yaml_mapping_key,4,1},
      {yaml_scalar,3,13,
        {yaml_tag,3,13,{non_specific,"?"}},
        flow,plain,"value"},
      {yaml_mapping_value,3,11},
      {yaml_scalar,3,1,
        {yaml_tag,3,1,{non_specific,"!"}},
        flow,double_quoted,"readable"},
      {yaml_mapping_key,3,1},
      {yaml_scalar,2,12,
        {yaml_tag,2,12,{non_specific,"?"}},
        flow,plain,"value"},
      {yaml_mapping_value,2,11},
      {yaml_scalar,2,1,
        {yaml_tag,2,1,{non_specific,"!"}},
        flow,double_quoted,"adjacent"},
      {yaml_mapping_key,2,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,mapping},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
