%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    <<>>,
    30,
    true,
    [],
    0,
    31,
    7,
    1,
    false,
    7,
    1,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    19,
    18,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,7,1},
      {yaml_doc_end,7,1},
      {yaml_collection_end,7,1,block,mapping},
      {yaml_scalar,5,7,
        {yaml_tag,5,7,{non_specific,"!"}},
        block,literal,"\n"},
      {yaml_mapping_value,5,5},
      {yaml_scalar,5,1,
        {yaml_tag,5,1,{non_specific,"?"}},
        flow,plain,"keep"},
      {yaml_mapping_key,5,1},
      {yaml_scalar,3,7,
        {yaml_tag,3,7,{non_specific,"!"}},
        block,folded,""},
      {yaml_mapping_value,3,5},
      {yaml_scalar,3,1,
        {yaml_tag,3,1,{non_specific,"?"}},
        flow,plain,"clip"},
      {yaml_mapping_key,3,1},
      {yaml_scalar,1,8,
        {yaml_tag,1,8,{non_specific,"!"}},
        block,folded,""},
      {yaml_mapping_value,1,6},
      {yaml_scalar,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,plain,"strip"},
      {yaml_mapping_key,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,mapping},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
