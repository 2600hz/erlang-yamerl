%% vim:ft=erlang:

%% TEST
?_assertThrow(
  {yaml_parser,
    {file,"${FILENAME}"},
    <<>>,
    20,
    true,
    [],
    0,
    21,
    5,
    1,
    false,
    4,
    2,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    _,
    3,
    6,
    5,
    undefined,
    undefined,
    _,
    true,
    [
      {yaml_parser_error,3,1,error,unpected_token,
        "Unexpected \"yaml_scalar\" token following a \"yaml_scalar\" token\n",
        {yaml_scalar,3,1,
          {yaml_tag,3,1,{non_specific,"!"}},
          flow,double_quoted,"item2"},
        []}
    ],
    [
      {yaml_scalar,2,1,
        {yaml_tag,2,1,{non_specific,"!"}},
        flow,double_quoted,"item1"},
      {yaml_sequence_entry,2,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
