%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    string,
    <<>>,
    19,
    true,
    [],
    0,
    20,
    4,
    2,
    false,
    4,
    2,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    11,
    10,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,4,2},
      {yaml_doc_end,4,2},
      {yaml_collection_end,4,1,flow,sequence},
      {yaml_scalar,3,3,
        {yaml_tag,3,3,{non_specific,"?"}},
        flow,plain,"two"},
      {yaml_sequence_entry,3,3},
      {yaml_scalar,2,3,
        {yaml_tag,2,3,{non_specific,"?"}},
        flow,plain,"one"},
      {yaml_sequence_entry,2,3},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:string(<<"[\r\n  one,\r\n  two\r\n]">>)
)
