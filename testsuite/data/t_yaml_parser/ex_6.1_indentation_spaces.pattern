%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    301,
    true,
    [],
    0,
    302,
    13,
    1,
    false,
    12,
    33,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    27,
    26,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,12,33},
      {yaml_doc_end,12,33},
      {yaml_collection_end,12,33,block,mapping},
      {yaml_collection_end,12,33,block,mapping},
      {yaml_collection_end,12,5,flow,sequence},
      {yaml_scalar,11,4,
        {yaml_tag,11,4,{non_specific,"?"}},
        flow,plain,"Still by two"},
      {yaml_sequence_entry,11,4},
      {yaml_scalar,10,3,
        {yaml_tag,10,3,{non_specific,"?"}},
        flow,plain,"Also by two"},
      {yaml_sequence_entry,10,3},
      {yaml_scalar,9,4,
        {yaml_tag,9,4,{non_specific,"?"}},
        flow,plain,"By two"},
      {yaml_sequence_entry,9,4},
      {yaml_collection_start,8,14,
        {yaml_tag,8,14,{non_specific,"?"}},
        flow,sequence},
      {yaml_mapping_value,8,12},
      {yaml_scalar,8,2,
        {yaml_tag,8,2,{non_specific,"?"}},
        flow,plain,"Flow style"},
      {yaml_mapping_key,8,2},
      {yaml_scalar,5,16,
        {yaml_tag,5,16,{non_specific,"!"}},
        block,literal,"By four\n  spaces\n"},
      {yaml_mapping_value,5,14},
      {yaml_scalar,5,2,
        {yaml_tag,5,2,{non_specific,"?"}},
        flow,plain,"By one space"},
      {yaml_mapping_key,5,2},
      {yaml_collection_start,5,2,
        {yaml_tag,5,2,{non_specific,"?"}},
        block,mapping},
      {yaml_mapping_value,4,13},
      {yaml_scalar,4,1,
        {yaml_tag,4,1,{non_specific,"?"}},
        flow,plain,"Not indented"},
      {yaml_mapping_key,4,1},
      {yaml_collection_start,4,1,
        {yaml_tag,4,1,{non_specific,"?"}},
        block,mapping},
      {yaml_doc_start,4,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
