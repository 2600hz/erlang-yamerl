%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    50,
    true,
    [],
    0,
    51,
    6,
    1,
    false,
    5,
    8,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    20,
    17,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,5,8},
      {yaml_doc_end,5,8},
      {yaml_collection_end,5,8,block,sequence},
      {yaml_scalar,5,3,
        {yaml_tag,5,3,"tag:yaml.org,2002:str"},
        flow,plain,[]},
      {yaml_sequence_entry,5,1},
      {yaml_alias,4,3,"anchor"},
      {yaml_sequence_entry,4,1},
      {yaml_scalar,3,11,
        {yaml_tag,3,11,{non_specific,"!"}},
        flow,double_quoted,"c"},
      {yaml_anchor,3,3,"anchor"},
      {yaml_sequence_entry,3,1},
      {yaml_scalar,2,3,
        {yaml_tag,2,3,{non_specific,"!"}},
        flow,single_quoted,"b"},
      {yaml_sequence_entry,2,1},
      {yaml_scalar,1,9,
        {yaml_tag,1,3,"tag:yaml.org,2002:str"},
        flow,double_quoted,"a"},
      {yaml_sequence_entry,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
