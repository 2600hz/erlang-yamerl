%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    <<>>,
    27,
    true,
    [],
    0,
    28,
    4,
    1,
    false,
    3,
    8,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    11,
    10,
    undefined,
    undefined,
    _,
    false,
    [
      {yaml_parser_error,3,3,warning,invalid_escaped_character,
        "Invalid escaped character\n",
        {yaml_scalar,2,3,{yaml_tag,2,3,{non_specific,"!"}},flow,double_quoted,"c "},
        []},
      {yaml_parser_error,2,4,warning,invalid_escaped_character,
        "Invalid escaped character\n",
        {yaml_scalar,2,3,{yaml_tag,2,3,{non_specific,"!"}},flow,double_quoted,""},
        []}
    ],
    [
      {yaml_stream_end,3,8},
      {yaml_doc_end,3,8},
      {yaml_collection_end,3,8,block,mapping},
      {yaml_scalar,2,3,
        {yaml_tag,2,3,{non_specific,"!"}},
        flow,double_quoted,"c xq-"},
      {yaml_mapping_value,1,12},
      {yaml_scalar,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,plain,"Bad escapes"},
      {yaml_mapping_key,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,mapping},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
