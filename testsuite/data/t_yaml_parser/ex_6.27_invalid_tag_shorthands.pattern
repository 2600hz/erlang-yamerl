%% vim:ft=erlang:

%% TEST
?_assertThrow(
  {yaml_parser,
    {yaml_parser,
      {file,"${FILENAME}"},
      [],
      <<>>,
      58,
      true,
      [],
      0,
      59,
      5,
      1,
      false,
      4,
      13,
      utf8,
      false,
      undefined,
      _,
      _,
      [],
      {bcoll,root,0,-1,1,1,-1,1,1},
      false,
      false,
      false,
      [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
      false,
      false,
      _,
      [],
      0,
      14,
      11,
      undefined,
      undefined,
      _,
      true,
      [
        {yaml_parser_error,4,9,error,undeclared_tag_handle,
          "Tag handle \"!h!\" never declared\n",
          {yaml_tag,4,3,"!h!bar"},
          []},
        {yaml_parser_error,3,6,error,invalid_tag_handle,
          "Tag suffix mandatory\n",
          {yaml_tag,3,3,"!e!"},
          []}
      ],
      [
        {yaml_stream_end,4,13},
        {yaml_doc_end,4,13},
        {yaml_collection_end,4,13,block,sequence},
        {yaml_scalar,4,10,{yaml_tag,4,3,"!h!bar"},flow,plain,"baz"},
        {yaml_sequence_entry,4,1},
        {yaml_scalar,3,7,
          {yaml_tag,3,3,"tag:example,2000:app/"},
          flow,plain,"foo"},
        {yaml_sequence_entry,3,1},
        {yaml_collection_start,3,1,
          {yaml_tag,3,1,{non_specific,"?"}},
          block,sequence},
        {yaml_doc_start,2,1,{1,2},_},
        {yaml_tag_directive,1,1,"!e!","tag:example,2000:app/"},
        {yaml_stream_start,1,1,utf8}
      ]
    }
  },
  yaml_parser:file("${FILENAME}")
)
