%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    218,
    true,
    [],
    0,
    219,
    13,
    1,
    false,
    12,
    31,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    30,
    29,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,12,31},
      {yaml_doc_end,12,31},
      {yaml_collection_end,12,31,block,sequence},
      {yaml_collection_end,12,30,flow,sequence},
      {yaml_scalar,12,3,
        {yaml_tag,12,3,{non_specific,"?"}},
        flow,plain,"http://example.com/foo#bar"},
      {yaml_sequence_entry,12,3},
      {yaml_scalar,11,3,
        {yaml_tag,11,3,{non_specific,"?"}},
        flow,plain,"-123"},
      {yaml_sequence_entry,11,3},
      {yaml_scalar,10,3,
        {yaml_tag,10,3,{non_specific,"!"}},
        flow,double_quoted,"Up, up and away!"},
      {yaml_sequence_entry,10,3},
      {yaml_scalar,9,3,
        {yaml_tag,9,3,{non_specific,"!"}},
        flow,double_quoted,": - ()"},
      {yaml_sequence_entry,9,3},
      {yaml_scalar,8,5,
        {yaml_tag,8,5,{non_specific,"?"}},
        flow,plain,"::vector"},
      {yaml_sequence_entry,8,5},
      {yaml_collection_start,8,3,
        {yaml_tag,8,3,{non_specific,"?"}},
        flow,sequence},
      {yaml_sequence_entry,8,1},
      {yaml_scalar,6,3,
        {yaml_tag,6,3,{non_specific,"?"}},
        flow,plain,"http://example.com/foo#bar"},
      {yaml_sequence_entry,6,1},
      {yaml_scalar,5,3,
        {yaml_tag,5,3,{non_specific,"?"}},
        flow,plain,"-123"},
      {yaml_sequence_entry,5,1},
      {yaml_scalar,4,3,
        {yaml_tag,4,3,{non_specific,"?"}},
        flow,plain,"Up, up, and away!"},
      {yaml_sequence_entry,4,1},
      {yaml_scalar,3,3,
        {yaml_tag,3,3,{non_specific,"!"}},
        flow,double_quoted,": - ()"},
      {yaml_sequence_entry,3,1},
      {yaml_scalar,2,3,
        {yaml_tag,2,3,{non_specific,"?"}},
        flow,plain,"::vector"},
      {yaml_sequence_entry,2,1},
      {yaml_collection_start,2,1,
        {yaml_tag,2,1,{non_specific,"?"}},
        block,sequence},
      {yaml_doc_start,2,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
