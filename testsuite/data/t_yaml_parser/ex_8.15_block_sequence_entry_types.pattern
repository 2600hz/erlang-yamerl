%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    <<>>,
    92,
    true,
    [],
    0,
    93,
    7,
    1,
    false,
    6,
    29,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    25,
    24,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,6,29},
      {yaml_doc_end,6,29},
      {yaml_collection_end,6,29,block,sequence},
      {yaml_collection_end,6,29,block,mapping},
      {yaml_scalar,6,8,
        {yaml_tag,6,8,{non_specific,"?"}},
        flow,plain,"two"},
      {yaml_mapping_value,6,6},
      {yaml_scalar,6,3,
        {yaml_tag,6,3,{non_specific,"?"}},
        flow,plain,"one"},
      {yaml_mapping_key,6,3},
      {yaml_collection_start,6,3,
        {yaml_tag,6,3,{non_specific,"?"}},
        block,mapping},
      {yaml_sequence_entry,6,1},
      {yaml_collection_end,5,19,block,sequence},
      {yaml_scalar,5,5,
        {yaml_tag,5,5,{non_specific,"?"}},
        flow,plain,"two"},
      {yaml_sequence_entry,5,3},
      {yaml_scalar,4,5,
        {yaml_tag,4,5,{non_specific,"?"}},
        flow,plain,"one"},
      {yaml_sequence_entry,4,3},
      {yaml_collection_start,4,3,
        {yaml_tag,4,3,{non_specific,"?"}},
        block,sequence},
      {yaml_sequence_entry,4,1},
      {yaml_scalar,2,3,
        {yaml_tag,2,3,{non_specific,"!"}},
        block,literal,"block node\n"},
      {yaml_sequence_entry,2,1},
      {yaml_scalar,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,plain,[]},
      {yaml_sequence_entry,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
