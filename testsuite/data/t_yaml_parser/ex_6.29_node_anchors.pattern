%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    <<>>,
    59,
    true,
    [],
    0,
    60,
    3,
    1,
    false,
    2,
    27,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    16,
    15,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,2,27},
      {yaml_doc_end,2,27},
      {yaml_collection_end,2,27,block,mapping},
      {yaml_alias,2,20,"anchor"},
      {yaml_mapping_value,2,18},
      {yaml_scalar,2,1,
        {yaml_tag,2,1,{non_specific,"?"}},
        flow,plain,"Second occurrence"},
      {yaml_mapping_key,2,1},
      {yaml_scalar,1,27,
        {yaml_tag,1,27,{non_specific,"?"}},
        flow,plain,"Value"},
      {yaml_anchor,1,19,"anchor"},
      {yaml_mapping_value,1,17},
      {yaml_scalar,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        flow,plain,"First occurrence"},
      {yaml_mapping_key,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,mapping},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
