%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    38,
    true,
    [],
    0,
    39,
    6,
    1,
    false,
    5,
    4,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    27,
    26,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,5,4},
      {yaml_doc_end,5,4},
      {yaml_collection_end,5,4,block,sequence},
      {yaml_scalar,5,3,
        {yaml_tag,5,3,{non_specific,"?"}},
        flow,plain,"c"},
      {yaml_sequence_entry,5,1},
      {yaml_scalar,4,3,
        {yaml_tag,4,3,{non_specific,"!"}},
        flow,single_quoted,"b"},
      {yaml_sequence_entry,4,1},
      {yaml_scalar,3,3,
        {yaml_tag,3,3,{non_specific,"!"}},
        flow,double_quoted,"a"},
      {yaml_sequence_entry,3,1},
      {yaml_collection_end,2,10,flow,mapping},
      {yaml_scalar,2,8,
        {yaml_tag,2,8,{non_specific,"?"}},
        flow,plain,"b"},
      {yaml_mapping_value,2,6},
      {yaml_scalar,2,5,
        {yaml_tag,2,5,{non_specific,"?"}},
        flow,plain,"a"},
      {yaml_mapping_key,2,5},
      {yaml_collection_start,2,3,
        {yaml_tag,2,3,{non_specific,"?"}},
        flow,mapping},
      {yaml_sequence_entry,2,1},
      {yaml_collection_end,1,10,flow,sequence},
      {yaml_scalar,1,8,
        {yaml_tag,1,8,{non_specific,"?"}},
        flow,plain,"b"},
      {yaml_sequence_entry,1,8},
      {yaml_scalar,1,5,
        {yaml_tag,1,5,{non_specific,"?"}},
        flow,plain,"a"},
      {yaml_sequence_entry,1,5},
      {yaml_collection_start,1,3,
        {yaml_tag,1,3,{non_specific,"?"}},
        flow,sequence},
      {yaml_sequence_entry,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
