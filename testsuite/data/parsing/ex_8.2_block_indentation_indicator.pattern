%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yaml_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    69,
    true,
    [],
    0,
    70,
    12,
    1,
    false,
    12,
    1,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    15,
    14,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yaml_stream_end,12,1},
      {yaml_doc_end,12,1},
      {yaml_collection_end,12,1,block,sequence},
      {yaml_scalar,9,3,
        {yaml_tag,9,3,{non_specific,"!"}},
        block,folded,"\t detected\n"},
      {yaml_sequence_entry,9,1},
      {yaml_scalar,7,3,
        {yaml_tag,7,3,{non_specific,"!"}},
        block,literal," explicit\n"},
      {yaml_sequence_entry,7,1},
      {yaml_scalar,3,3,
        {yaml_tag,3,3,{non_specific,"!"}},
        block,folded,"\n\n# detected\n"},
      {yaml_sequence_entry,3,1},
      {yaml_scalar,1,3,
        {yaml_tag,1,3,{non_specific,"!"}},
        block,literal,"detected\n"},
      {yaml_sequence_entry,1,1},
      {yaml_collection_start,1,1,
        {yaml_tag,1,1,{non_specific,"?"}},
        block,sequence},
      {yaml_doc_start,1,1,{1,2},_},
      {yaml_stream_start,1,1,utf8}
    ]
  },
  yaml_parser:file("${FILENAME}")
)
